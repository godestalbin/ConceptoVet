@model ConceptoVet.Models.Quotation

@{
    Layout = "~/Views/Shared/Mail.cshtml";
}

<p id="debugText">
</p>

<div>
        @Html.Partial("Contact", Model.contact)
</div>
<div>
        @Html.Partial("Quotation", Model.furnitures)
</div>

@section Scripts {
@*Google API key*@
<script type="text/javascript"
    src="https://maps.googleapis.com/maps/api/js?key=AIzaSyC0KjUdM6DpNQAggngGkuKLFvoHw-lJ0H4&sensor=false">
</script>
<script>
    //Get the distance using Google Maps matrix API
    function getDistance(zipCode) {
        var service = new google.maps.DistanceMatrixService();
        service.getDistanceMatrix(
          {
              origins: ["82290, France"], //Set here the zip code start for transport: Meauzac
              destinations: [zipCode + ", France"],
              travelMode: google.maps.TravelMode.DRIVING
              //unitSystem: UnitSystem,
              //durationInTraffic: Boolean,
              //avoidHighways: false,
              //avoidTolls: false
          }, processDistance);
    }

    //Process the distance returned by Google Maps matrix API
    function processDistance(response, status) {
        if (status == google.maps.DistanceMatrixStatus.OK) {
            if (response.rows.length >= 1) {
                if (response.rows[0].elements.length >= 1) {
                    estimatedDistance = response.rows[0].elements[0].distance.value / 1000;
                    //$('#debugText').empty();
                    //$('#debugText').append(response.rows[0].elements[0].distance.text);
                    $('#zipCode').append(" - " + response.rows[0].elements[0].distance.text);

                    //Set the appropriate value for transport and installation fee
                    if (estimatedDistance > 800) serviceFee = 5239.92;
                    else if (estimatedDistance > 600) serviceFee = 4270.85;
                    else if (estimatedDistance > 400) serviceFee = 3390.53;
                    else serviceFee = 2082.82;

                    //Add the service
                    //$('#quotationTable tbody').append("<tr><td>Transport et installation dans le " +45 + "</td><td class='numeric'>1</td><td class='numeric'>" + formatNumber(serviceFee) + "</td><td class='numeric'>" + formatNumber(serviceFee) + "</td></tr>");
                    //total = parseFloat( $('#quotationTotal').text() ) + serviceFee
                    //$('#quotationTotal').text(formatNumber(total));

                }
            }
        }
    }

    //Format number with space for thousand separator and comma for decimal separator
    function formatNumber(number) {
        number = number.toFixed(2) + '';
        x = number.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? ',' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + ' ' + '$2');
        }
        return x1 + x2;
    }

    $(document).ready(function () {
        //Get the distance from Google
        getDistance($("#zipCode").text());
        //Display numeric values with 2 decimals
        $(".decimal-2").each(function () {
            $(this).text(formatNumber(parseInt($(this).text())));
        });
    });

</script>
}
